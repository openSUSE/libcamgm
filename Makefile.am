# Emacs: -*- makefile -*-
#
# Toplevel Makefile.am for a LiMaL subproject
#
# -- This file is generated by limalautomake - DO NOT EDIT! --
#    (Edit ./SUBDIRS instead)
#

PREFIX			= /usr

VERSION			= $(shell cat $(srcdir)/VERSION)
RPMNAME 		= $(shell cat $(srcdir)/RPMNAME)
SUBDIRS_FILE		= $(shell test -e $(srcdir)/SUBDIRS      && echo SUBDIRS)
ACINCLUDE_FILE		= $(shell test -e $(srcdir)/acinclude.m4 && echo acinclude.m4)

# we can specify additional files to .pot creation
POTFILES_FILE		= $(shell test -e $(srcdir)/POTFILES     && echo POTFILES)
POTFILES		= $(shell test -e $(srcdir)/POTFILES     && sed 's,^,$(srcdir)/,' < $(srcdir)/POTFILES)

# do we do Makefile.am for devtools? It is a little special...
IS_DEVTOOLS		= $(findstring limal-devtools,$(RPMNAME))

DEVTOOLS_DIR 		= $(if $(IS_DEVTOOLS),$(srcdir)/devtools,$(PREFIX)/share/limal/devtools)
LEGALESE_DIR		= $(DEVTOOLS_DIR)/admin/copyright/gpl

COPYRIGHT_files_gpl	= README COPYING COPYRIGHT.english

extra_COPYRIGHT_files =   $(COPYRIGHT_files_gpl)

AUTOMAKE_OPTIONS = foreign dist-bzip2

# create bzip2ed tar and make some sanity checks
$(RPMNAME)-$(VERSION).tar.bz2: dist-bzip2
	@if [ `bunzip2 -c $(RPMNAME)-$(VERSION).tar.bz2 | wc --bytes` = 0 ] ; then \
	    echo "Error: created tar is empty" ; \
	    exit 1 ; \
	fi

CLEANFILES = *~
MAINTAINERCLEANFILES = configure configure.in $(RPMNAME).pc Makefile Makefile.in package/$(RPMNAME)-$(VERSION).tar.bz2 package/$(RPMNAME).spec

# all the .pm files, we should separate texts from (exclude testsuite directory)
POT_SRC = $(shell find $(srcdir) -type d \( -name testsuite -o -name .svn -o -name CVS \) -prune , \
	-type f | xargs -r egrep -l '^<?[[:space:]]*[Tt]extdomain>?') \
	$(POTFILES)

# all the textdomains for .pot creation
POT_DOMAINS = \
	$(shell \
	    PSRC="$(POT_SRC)" ; \
	    if [ "$$PSRC" ] ; \
	    then \
		DOMAINS="" ; \
		for F in $$PSRC ; \
		do \
		    D="`egrep '^[[:space:]]*<?[Tt]extdomain>?' $$F | head -n 1 | \
		        sed 's/^[[:space:]]*<\?[Tt]extdomain[[:space:]]*[="(>]*[[:space:]]*\([-_a-zA-Z0-9]*\).*/\1/'`" ; \
		    DOMAINS="$$D\n$$DOMAINS" ; \
		done ; \
		echo -en $$DOMAINS | LC_COLLATE=C sort | uniq ; \
	    fi ; : \) \
	)

# the names of the actual .pot files
POT_DST = $(addprefix $(srcdir)/,$(addsuffix .pot,$(POT_DOMAINS)))


EXTRA_DIST = \
	VERSION RPMNAME MAINTAINER configure.in.in		\
	$(SUBDIRS_FILE) $(ACINCLUDE_FILE)			\
	$(POTFILES_FILE)					\
	$(if $(IS_DEVTOOLS),$(POT_DST))

show-extra-dist:
	@echo $(EXTRA_DIST)

# info '(automake)Conditionals'
if CREATE_PKGCONFIG
# pkg-config
# if a package does not have its own pc, copy the generic one
$(RPMNAME).pc.in: $(DEVTOOLS_DIR)/admin/generic.pc.in
	test -f $@ || cp -p $< $@
# create the file here instead of by configure
# because the prerequisite is made here
# and we don't want any paths in limalautoconf
# info '(autoconf)config.status Invocation'
$(RPMNAME).pc: $(RPMNAME).pc.in
	./config.status --file=$@:$<

pkgconfig_DATA = $(RPMNAME).pc
EXTRA_DIST += $(RPMNAME).pc.in
endif

dist-hook:
	@for I in $(extra_COPYRIGHT_files) ;					\
	do									\
	    EX="" ;								\
	    if test -f $(srcdir)/$$I ; then					\
		EX=$(srcdir)/$$I ;						\
	    elif test -f $(LEGALESE_DIR)/$$I ; then				\
		EX=$(LEGALESE_DIR)/$$I ;					\
	    else								\
	        echo "Error: No file $$I in $(srcdir)/ or in $$LEGALESE_DIR/";	\
		exit 1 ;							\
	    fi ;								\
	    echo "cp $$EX $(distdir)" ;						\
	    cp $$EX "$(distdir)" ;						\
	done
	rm -f `find $(distdir) -name .cvsignore`

xgettext_call = \
	echo "Creating $(srcdir)/$$MODULE.pot from $$FILES..." ;		\
	$(XGETTEXT) --no-wrap --add-comments --add-location --keyword=_:1,2	\
		--keyword=__							\
		--foreign-user --copyright-holder="SuSE Linux Products GmbH"	\
		--default-domain=$$MODULE --output=$$MODULE.pot $$FILES

# we need a "dummy" pot target for the case, when $(POT_DST) is empty
$(POT_DST) pot: $(POT_SRC)
	@DOMAINS="" ; \
	for F in $^ ; \
	do \
	    D=`egrep '^[[:space:]]*<?[Tt]extdomain>?' $$F | head -n 1 | \
	       sed 's/^[[:space:]]*<\?[Tt]extdomain[[:space:]]*[="(>]*[[:space:]]*\([-_a-zA-Z0-9]*\).*/\1/'` ; \
	    if [ -z $$D ] ; \
	    then \
		echo "Error: empty textdomain in $$F" ; \
		exit 1 ; \
	    fi ; \
	    DOMAINS="$$D:$$F\n$$DOMAINS" ; \
	done ; \
	DOMAINS=`echo -en $$DOMAINS | LC_COLLATE=C sort` ; \
	MODULE=$${DOMAINS%%:*} ; \
	FILES="" ; \
	for I in $$DOMAINS ; \
	do \
	    D=$${I%%:*} ; \
	    F=$${I#*:} ; \
	    if [ "$$D" != "$$MODULE" ] ; \
	    then \
		$(xgettext_call) ; \
		MODULE=$$D ; \
		FILES=$$F ; \
	    else \
		FILES="$$FILES $$F" ; \
	    fi ; \
	done ; \
	$(xgettext_call)

install-pot: $(POT_DST)
	@if [ -n "$^" ] ; then \
	    echo "mkdir -p $(DESTDIR)$(potdir)" ; \
	    mkdir -p $(DESTDIR)$(potdir) ; \
	    list="$^"; \
	    for I in $$list ; \
	    do \
		echo "$(INSTALL_DATA) $$I $(DESTDIR)$(potdir)" ; \
		$(INSTALL_DATA) $$I $(DESTDIR)$(potdir) ; \
	    done ; \
	fi


install-data-local: # $(if $(IS_DEVTOOLS),,install-pot)
	mkdir -p $(DESTDIR)$(docdir)
	@for I in $(extra_COPYRIGHT_files) ;					\
	do									\
	    EX="" ;								\
	    if test -f $(srcdir)/$$I ; then					\
		EX=$(srcdir)/$$I ;						\
	    elif test -f $(LEGALESE_DIR)/$$I ; then				\
		EX=$(LEGALESE_DIR)/$$I ;					\
	    else								\
		echo "Error: No file $$I in $(srcdir)/ or in $(LEGALESE_DIR)/";	\
		exit 1 ;							\
	    fi ;								\
	    echo "$(INSTALL_DATA) $$EX $(DESTDIR)$(docdir)" ;			\
	    $(INSTALL_DATA) $$EX $(DESTDIR)$(docdir) ;				\
	done

package-local: $(if $(IS_DEVTOOLS),,$(POT_DST)) $(RPMNAME)-$(VERSION).tar.bz2
	rm -f package/$(RPMNAME)-*.tar.bz2
	rm -f package/*~
	rm -f package/*.bak
	rm -f package/*.auto
	mv $(RPMNAME)-$(VERSION).tar.bz2 package/
	if ! test -x $(PREFIX)/bin/limaltool; then \
	    echo "$(PREFIX)/bin/limaltool: not found."; \
	    echo "You have to install limal-devtools to making a package"; \
	    false; \
	fi
	here=`pwd`; \
	cd $(srcdir) && for i in $(RPMNAME)*.spec.in; do \
	    newname="`echo "$$i" | sed "s/\.in$$//g"`"; \
	    $(PREFIX)/bin/limaltool create-spec < $$i > $$here/package/$${newname} ; \
	done

package: check-up-to-date check-tagversion package-local

TAGVERSION	 = $(PREFIX)/bin/limaltool tagversion

check-up-to-date check-svn-up-to-date:
	cd $(srcdir) && ! LC_ALL=C svn status --show-updates --quiet | grep -v '^Status against revision'

check-tagversion:
	@if [ -d $(srcdir)/.svn ]; then \
	  cd $(srcdir) && svn cat `$(TAGVERSION) --echourl`/VERSION; \
	fi >/dev/null; \
	[ $$? = 0 ] || ( echo "ERROR: Please run 'limaltool tagversion' first"; false )

stable: checkin-stable

checkin-stable: package
	$(PREFIX)/bin/limaltool checkin-stable


# Contents of ./SUBDIRS
SUBDIRS = src swig doc testsuite
