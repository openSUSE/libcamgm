dnl configure.in for limal-ca-mgm
dnl
dnl -- This file is generated by limalautoconf - DO NOT EDIT! --
dnl    (edit configure.in.in instead)

AC_INIT(limal-ca-mgm, 1.6.4, http://www.suse.de/feedback, limal-ca-mgm)
dnl Check for presence of file 'RPMNAME'
AC_CONFIG_SRCDIR([RPMNAME])

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_TARGET
dnl Perform program name transformation
AC_ARG_PROGRAM

AC_PREFIX_DEFAULT(/usr)

AM_INIT_AUTOMAKE(tar-ustar) dnl searches for some needed programs

dnl Important LiMaL variables
VERSION="1.6.4"
RPMNAME="limal-ca-mgm"
RPMARCH=""
RPMLIB="ca-mgm"
MAINTAINER="Michael Calmer <mc@novell.com>"

limalbindir=\${bindir}
limallibdir=\${libdir}/limal
limaldatadir=\${prefix}/share/limal
limalincludedir=\${includedir}/limal

dnl pkgconfig honors lib64
pkgconfigdir=\${libdir}/pkgconfig
case $RPMARCH in
noarch) pkgconfigdir=\${prefix}/share/pkgconfig ;;
esac

docdir=\${prefix}/share/doc/packages/$RPMNAME
mandir=\${prefix}/share/man

potdir=\${docdir}/pot
pobindir=${limaldatadir}/po-tools
localedir=\${prefix}/share/locale

AC_SUBST(VERSION)
AC_SUBST(RPMNAME)
AC_SUBST(RPMLIB)
AC_SUBST(MAINTAINER)

AC_SUBST(limallibdir)
AC_SUBST(limalbindir)
AC_SUBST(limaldatadir)
AC_SUBST(limalincludedir)

AC_SUBST(pkgconfigdir)

AC_SUBST(docdir)
AC_SUBST(mandir)

AC_SUBST(potdir)
AC_SUBST(pobindir)
AC_SUBST(localedir)



CREATE_PKGCONFIG=true

LIMAL_CA_MGM_LIB_VERSION=${VERSION}
LIMAL_CA_MGM_API_VERSION=${VERSION%%.*}
AC_SUBST(LIMAL_CA_MGM_LIB_VERSION)
AC_SUBST(LIMAL_CA_MGM_API_VERSION)

major=${VERSION%%.*}
minor=${VERSION#*.}
minor=${minor%.*}
patch=${VERSION##*.}

# first binary compatible minor number
old=4
# current interface number (incl. minor)
cur=$((${major} * 100 + ${minor}))
# binary compatible interface range dif
age=$((${cur} - ${major} * 100 - ${old}))
# libtool -version-info arguments
LIB_VERSION_INFO=${cur}:${patch}:${age}
AC_SUBST(LIB_VERSION_INFO)

dnl Checks for programs.
AC_PROG_INSTALL
INSTALL="${INSTALL} -p"
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl pkgconfig
AC_ARG_VAR([PKG_CONFIG_PATH], [where to search for pkg-config files])
dnl devtools
dnl ...
dnl producing pkg-config for others?
AM_CONDITIONAL(CREATE_PKGCONFIG, test x${CREATE_PKGCONFIG} = xtrue)

dnl no need for AC_ARG_VAR
AC_PATH_PROG(XGETTEXT, xgettext)
if test -z "$XGETTEXT" ; then
    AC_MSG_ERROR(xgettext is missing; please install gettext.)
fi

dnl Check docbook installation
LIMAL_CHECK_DOCBOOK

devtools_limalbindir=`pkg-config --variable=limalbindir limal-devtools`
devtools_limaldatadir=`pkg-config --variable=limaldatadir limal-devtools`

dbdir=${devtools_limaldatadir}/docbook
STYLESHEET_HTML=${dbdir}/stylesheets/limal-customize-html.xsl
STYLESHEET_PDF=${dbdir}/stylesheets/limal-customize-fo.xsl
STYLESHEET_CSS=${dbdir}/css/limaldocs.css
AC_SUBST(STYLESHEET_HTML)
AC_SUBST(STYLESHEET_PDF)
AC_SUBST(STYLESHEET_CSS)


AC_PATH_PROG(LIMALDOXYGEN, limaldoxygen, false, $PATH:$devtools_limalbindir)
if test "$LIMALDOXYGEN" = "false"; then
    AC_MSG_ERROR([limaldoxygen is not installed])
fi

AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_LANG(C++)

CFLAGS="${CFLAGS} -W -Wall"
CXXFLAGS="${CXXFLAGS} -W -Wall"

dnl Check large file support via AC_SYS_LARGEFILE
dnl  - adds the --disable-largefile option
dnl  - substitutes LFS_CPPFLAGS variable
LIMAL_CHECK_LARGEFILE
if test "x${LFS_CPPFLAGS}" != x ; then
    CPPFLAGS="${CPPFLAGS} ${LFS_CPPFLAGS}"
fi

dnl Libtool checks
AC_DISABLE_STATIC
AC_PROG_LIBTOOL
AM_PROG_LIBTOOL dnl for libraries

dnl generate the config header
AC_CONFIG_HEADERS([config.h]) dnl at the distribution this done

AC_FUNC_ALLOCA
AC_FUNC_STRERROR_R
AC_HEADER_STDC

dnl Check BloCxx installation
LIMAL_CHECK_BLOCXX([1.0.0])

dnl Check Swig installation
LIMAL_CHECK_SWIG


AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION(0.14.3)


AC_PATH_PROG(OPENSSL_COMMAND, "openssl")
if test -z "$OPENSSL_COMMAND" ; then
    AC_MSG_ERROR([openssl command is missing; please install])
fi

AC_PATH_PROG(C_REHASH_COMMAND, "c_rehash")
if test -z "$C_REHASH_COMMAND" ; then
    AC_MSG_ERROR([c_rehash command is missing; please install])
fi

AC_SUBST(OPENSSL_COMMAND)
AC_SUBST(C_REHASH_COMMAND)

AC_CHECK_HEADER([openssl/x509v3.h],,[
    AC_MSG_ERROR([Unable to find openssl/x509v3.h])
])
AC_CHECK_HEADER([openssl/pem.h],,[
    AC_MSG_ERROR([Unable to find openssl/pem.h])
])
AC_CHECK_HEADER([openssl/bio.h],,[
    AC_MSG_ERROR([Unable to find openssl/bio.h])
])
AC_CHECK_HEADER([openssl/rsa.h],,[
    AC_MSG_ERROR([Unable to find openssl/rsa.h])
])
AC_CHECK_HEADER([openssl/x509.h],,[
    AC_MSG_ERROR([Unable to find openssl/x509.h])
])
AC_CHECK_HEADER([openssl/evp.h],,[
    AC_MSG_ERROR([Unable to find openssl/evp.h])
])

AC_CHECK_LIB(ssl, main, [LIB_SSL="-lssl"], [LIB_SSL=""])

if test -z "$LIB_SSL"; then
    AC_MSG_ERROR([cannot find LIBSSL])
fi

# FIXME: remove me after PathUtils review
AC_PATH_PROG(CP_COMMAND, "cp")
if test -z "$CP_COMMAND" ; then
    AC_MSG_ERROR([cp command is missing; please install coreutils package])
fi
AC_SUBST(CP_COMMAND)

# FIXME: remove me after PathUtils review
AC_PATH_PROG(RM_COMMAND, "rm")
if test -z "$RM_COMMAND" ; then
    AC_MSG_ERROR([rm command is missing; please install coreutils package])
fi
AC_SUBST(RM_COMMAND)

AC_SUBST(LIB_SSL)

#AC_ARG_ENABLE(debug,[  --enable-debug          debug msg for Rep ],[DEBUG_FLAGS="-DCA_MGM_DEBUG"])
#AC_SUBST(DEBUG_FLAGS)

AC_MSG_CHECKING([if perl regex (pcre) works])
if `pkg-config libpcre &>/dev/null` ; then
        PCRE_LIB=`pkg-config --libs libpcre 2>/dev/null`
        PCRE_INC=`pkg-config --cflags libpcre 2>/dev/null`
        PCRE_LIB_DIR=`pkg-config --variable=libdir libpcre 2>/dev/null`
        PCRE_REQ=yes
elif `pcre-config --libs &>/dev/null` ; then
        PCRE_LIB=`pcre-config --libs 2>/dev/null`
        PCRE_INC=`pcre-config --cflags 2>/dev/null`
        PCRE_LIB_DIR="`pcre-config --prefix 2>/dev/null`/lib"
        # hmm...
        PCRE_REQ=no
fi
if test "x${PCRE_LIB}" != x ; then
        OLD_LIBS="$LIBS"
        OLD_CPPFLAGS="$CPPFLAGS"
        LIBS="$PCRE_LIB $LIBS"

        if test "x${PCRE_INC}" != x ; then
                CPPFLAGS="${PCRE_INC} ${CPPFLAGS}"
        fi

        AC_TRY_COMPILE(
                [
                        #include <pcre.h>
                ],
                [
                        int errcode = 0;
                        const char* errptr = NULL;
                        pcre* re = pcre_compile("^.*$", 0, &errptr, &errcode, NULL);
                        int count = 0;
                        errcode = pcre_exec(re, NULL, "abcd", 4, 0, 0, 0, 0); /* do not care about the parameters for this test... */
                        if( errcode == PCRE_ERROR_MATCHLIMIT ) /* wrong error constant for the op, but this one needs to be checked. */
                        {
                                return 1;
                        }
                        return 0;
                ],
                [
                        AC_DEFINE(HAVE_PCRE, 1, [Define to 1 if PCRE regex is avaliable])
                        AC_SUBST(HAVE_PCRE)
                        AC_MSG_RESULT([yes])
                ],
                [
                        if test x$PCRE_REQUIRED = x1; then
                                AC_MSG_ERROR([pcre support requested but does not work])
                        fi
                        CPPFLAGS="$OLD_CPPFLAGS"
                        AC_MSG_RESULT([no])
                ]
        )
        LIBS="$OLD_LIBS"
elif test x$PCRE_REQUIRED = x1; then
        AC_MSG_ERROR([Unable to find pcre library via pcre-config/pkg-config])
else
        AC_MSG_RESULT([no])
        PCRE_LIB=""
fi



AC_CONFIG_FILES(src/Commands.hpp)
AC_CONFIG_FILES(Makefile src/limal/ca-mgm/Makefile
src/limal/Makefile
src/Makefile
swig/perl5/Makefile
swig/Makefile
doc/autodocs/Makefile
doc/Makefile
testsuite/lib/Makefile
testsuite/single.out/Makefile
testsuite/config/Makefile
testsuite/Makefile
testsuite/TestRepos/Makefile
testsuite/limal.test/Makefile
po/Makefile.in
)
AC_OUTPUT

