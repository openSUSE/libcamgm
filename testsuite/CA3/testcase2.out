START
file: CA3/testcase2.in
creating CA object
============= Test:ca1_test=>Client_Cert
============= Call Verify
============= Call Dump
CertificateIssueData::dump()
notAfter - notBefore (in days)= 365
MessageDigest = 0
X509v3CertificateIssueExts::dump()
NsBaseUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsRevocationUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsCaRevocationUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsRenewalUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsCaPolicyUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsSslServerNameExt::dump()
ExtensionBase::dump()
is Present = false
NsCommentExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
NS Comment = "YaST Generated Client Certificate"
KeyUsageExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
KeyUsage = 0x00e0
NsCertTypeExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
NsCertType = 0xb0
BasicConstraintsExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
CA = false
pathlen = -1
ExtendedKeyUsageExt::dump()
ExtensionBase::dump()
is Present = false
SubjectKeyIdentifierExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
Autodetect = true
KeyID = 
AuthorityKeyIdentifierGenerateExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
KeyID = 1
Issuer = 2
SubjectAlternativeNameExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
email:copy = true
IssuerAlternativeNameExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
Issuer:copy = true
AuthorityInfoAccessExt::dump()
ExtensionBase::dump()
is Present = false
CRLDistributionPointsExt::dump()
ExtensionBase::dump()
is Present = false
CertificatePoliciesExt::dump()
ExtensionBase::dump()
is Present = false
creating CA object
============= Test:ca2_test=>Client_Cert
============= Call Verify
============= Call Dump
CertificateIssueData::dump()
notAfter - notBefore (in days)= 365
MessageDigest = 2
X509v3CertificateIssueExts::dump()
NsBaseUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsRevocationUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsCaRevocationUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsRenewalUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsCaPolicyUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsSslServerNameExt::dump()
ExtensionBase::dump()
is Present = false
NsCommentExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
NS Comment = "YaST Generated Client Certificate"
KeyUsageExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
KeyUsage = 0x00c0
NsCertTypeExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
NsCertType = 0xa0
BasicConstraintsExt::dump()
ExtensionBase::dump()
is Present = false
ExtendedKeyUsageExt::dump()
ExtensionBase::dump()
is Present = false
SubjectKeyIdentifierExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
Autodetect = false
KeyID = a1:32:53:4e
AuthorityKeyIdentifierGenerateExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
KeyID = 2
Issuer = 1
SubjectAlternativeNameExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
email:copy = false
LiteralValue::dump()
email:mc@suse.de
LiteralValue::dump()
URI:http://w3.suse.de/~mc/
IssuerAlternativeNameExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
Issuer:copy = true
AuthorityInfoAccessExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
AuthorityInformation::dump()
accessOID = caIssuers
LiteralValue::dump()
URI:http://ocsp.my.host/
CRLDistributionPointsExt::dump()
ExtensionBase::dump()
is Present = false
CertificatePoliciesExt::dump()
ExtensionBase::dump()
is Present = false
DONE
