START
======================== getRequestDefaults =================
======================== call verify() =================
Value() is too small. Value has to be a minimal length of 2
======================== call dump() =================
RequestGenerationData::dump()
DNObject::dump()
RDNObject::dump()
countryName=
Prompt:Country Name (2 letter code)
Min:2
Max:2
RDNObject::dump()
stateOrProvinceName=
Prompt:State or Province Name (full name)
Min:0
Max:0
RDNObject::dump()
localityName=
Prompt:Locality Name (eg, city)
Min:0
Max:0
RDNObject::dump()
organizationName=
Prompt:Organization Name (eg, company)
Min:0
Max:0
RDNObject::dump()
organizationalUnitName=
Prompt:Organizational Unit Name (eg, section)
Min:0
Max:0
RDNObject::dump()
commonName=
Prompt:Common Name (eg, YOUR name)
Min:0
Max:64
RDNObject::dump()
emailAddress=
Prompt:Email Address
Min:0
Max:64
Keysize = 2048
MessageDigest = 0
Challenge Password = 
Unstructured Name = 
X509v3RequestExts::dump()
NsSslServerNameExt::dump()
ExtensionBase::dump()
is Present = false
NsCommentExt::dump()
ExtensionBase::dump()
is Present = false
KeyUsageExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
KeyUsage = 0x0006
NsCertTypeExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
NsCertType = 0x06
BasicConstraintsExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
CA = true
pathlen = -1
ExtendedKeyUsageExt::dump()
ExtensionBase::dump()
is Present = false
SubjectKeyIdentifierExt::dump()
ExtensionBase::dump()
is Present = false
SubjectAlternativeNameExt::dump()
ExtensionBase::dump()
is Present = false
======================== getIssueDefaults =================
======================== call verify() =================
======================== call dump() =================
CertificateIssueData::dump()
notAfter - notBefore (in days)= 1500
MessageDigest = 0
X509v3CertificateIssueExts::dump()
NsBaseUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsRevocationUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsCaRevocationUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsRenewalUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsCaPolicyUrlExt::dump()
ExtensionBase::dump()
is Present = false
NsSslServerNameExt::dump()
ExtensionBase::dump()
is Present = false
NsCommentExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
NS Comment = "YaST Generated CA Certificate"
KeyUsageExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
KeyUsage = 0x0006
NsCertTypeExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
NsCertType = 0x06
BasicConstraintsExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = true
CA = true
pathlen = -1
ExtendedKeyUsageExt::dump()
ExtensionBase::dump()
is Present = false
SubjectKeyIdentifierExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
Autodetect = true
KeyID = 
AuthorityKeyIdentifierGenerateExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
KeyID = 2
Issuer = 2
SubjectAlternativeNameExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
email:copy = true
IssuerAlternativeNameExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
Issuer:copy = true
AuthorityInfoAccessExt::dump()
ExtensionBase::dump()
is Present = false
CRLDistributionPointsExt::dump()
ExtensionBase::dump()
is Present = false
CertificatePoliciesExt::dump()
ExtensionBase::dump()
is Present = false
======================== getCRLDefaults =================
======================== call verify() =================
======================== call dump() =================
CRLGenerationData::dump()
CRL Hours = 24
X509v3CRLGenerationExts::dump()
AuthorityKeyIdentifierGenerateExt::dump()
ExtensionBase::dump()
is Present = true
is Critical = false
KeyID = 2
Issuer = 2
IssuerAlternativeNameExt::dump()
ExtensionBase::dump()
is Present = false
DONE
